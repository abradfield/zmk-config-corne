/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt { tapping-term-ms = <350>; };

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&trans  &kp Q             &kp W        &kp E           &kp R       &kp T            &kp Y                     &kp U        &kp I                &kp O                &kp P                      &trans
&trans  &mt LEFT_SHIFT A  &mt LCTRL S  &mt LEFT_ALT D  &mt LCMD F  &kp G            &kp H                     &mt RCMD J   &mt RIGHT_ALT K      &mt RIGHT_CONTROL L  &mt RIGHT_SHIFT SEMICOLON  &trans
&trans  &mt LGUI Z        &kp X        &kp C           &kp V       &kp B            &kp N                     &kp M        &kp COMMA            &kp DOT              &kp FSLH                   &trans
                                       &kp SQT         &lt 1 RET   &mt LCTRL TAB    &mt LEFT_SHIFT BACKSPACE  &lt 2 SPACE  &mt LEFT_ALT ESCAPE
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCLAMATION   &kp AT_SIGN       &kp HASH           &kp DOLLAR            &kp PERCENT              &kp MINUS                 &kp N7        &kp N8        &kp N9        &kp EQUAL     &trans
&trans  &kp CARET         &kp AMPERSAND     &kp BACKSLASH      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &kp PLUS                  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp ASTERISK  &trans
&trans  &kp SINGLE_QUOTE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE        &kp RIGHT_BRACE          &kp PERIOD                &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp GRAVE     &trans
                                            &kp SQT            &kp RET               &kp TAB                  &mt LEFT_SHIFT BACKSPACE  &kp SPACE     &kp N0
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans         &kp HOME        &kp UP_ARROW    &kp END          &trans   &trans
&trans  &kp F1        &trans        &trans        &trans        &bt BT_CLR      &trans         &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp F12  &trans
&trans  &kp F2        &kp F3        &kp F4        &kp F5        &kp F6          &kp F7         &kp F8          &kp F9          &kp F10          &kp F11  &trans
                                    &kp LGUI      &kp RETURN    &kp TAB         &kp BACKSPACE  &kp SPACE       &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
